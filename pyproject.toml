[tool.poetry]
name = "app"
version = "0.0.1"
description = ""
authors = [
    "Eduard Laskarzhevskyi <laskarjevsky.eduard@gmail.com>",
]
readme = "README.md"
packages = [{include = "app", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["standard"], version = "^0.115.6"}
uvicorn = "^0.32.0"
sqlalchemy = "^2.0.36"
pydantic = "^2.9.2"
alembic = "^1.14.0"
psycopg = "^3.2.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.5"
pre-commit = "^4.0.1"


[tool.poetry.group.tests.dependencies]
pytest = "^8.2.0"
testcontainers = "^4.4.1"
polyfactory = "^2.18.1"
pytest-order = "^1.3.0"
pytest-asyncio = "^0.25.0"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-vv --order-scope=module"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 89
target-version = "py311"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"  # according to PEP8
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E", # Errors
    "F", # Pyflakes
    "I", # isort
    "T20", # flake8-print
]
pydocstyle.convention = 'google'

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = ["ARG001", "F401", "F811"]

[tool.ruff.lint.isort]
known-local-folder = ["tests", "src/app"]
split-on-trailing-comma = true
combine-as-imports = true
case-sensitive = false
detect-same-package = true
order-by-type = false  # Sorting of all imported objects (functions, classes, etc.) regardless of their type - According to Google import styles
force-sort-within-sections = true  # Don't sort straight-style imports before from-style imports - According to Google import styles
